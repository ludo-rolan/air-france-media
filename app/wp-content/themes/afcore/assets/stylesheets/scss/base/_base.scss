// -----------------------------------------------------------------------------
// This file contains very basic styles.
// -----------------------------------------------------------------------------

/**
 * Set up a decent box model on the root element
 */
html {
  box-sizing: border-box;
}

/**
 * Make all elements from the DOM inherit from the parent box-sizing
 * Since `*` has a specificity of 0, it does not override the `html` value
 * making all elements inheriting from the root box-sizing value
 * See: https://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/
 */
*,
*::before,
*::after {
  box-sizing: inherit;
}

/**
 * Basic styles for links
 */
a {
  text-decoration: none;
  color: $af-black;
  @include on-event {
    color: $af-black;
    text-decoration: none;
  }
}
section.container {
  padding-top: 15px;
  padding-bottom: 0px;
}

  section.container-fluid {
    padding-top: 35px;
    padding-bottom: 25px;
    margin-bottom: 10px;

}


@media screen and (min-width: $medium-width) {
  section.container
  {
    padding-top: 30px;
    padding-bottom: 15px;
  }

  section.container-fluid {
    padding-top: 30px;
    padding-bottom: 30px;
  }
}

.fadeClass{
  @include animation(fadeIn, 1.75s, ease);
}

@include looped-fadeIn('.fadeClass_btn_partager', 8) using ($i) {
  @include animation(fadeIn, #{$i * 0.75}s, ease);
}

@include looped-fadeIn('.fadeClass') using ($i) {
  @include animation(fadeIn, #{$i * 0.75}s, ease);
}

@include keyframes(fadeIn){
  0% {
      opacity: 0;
  }
  15% {
    opacity: 0.15;
  }
  25% {
    opacity: 0.25;
  }
  50% {
    opacity: 0.5;
  }
  75% {
    opacity: 0.75;
  }
  100% {
      opacity: 1;
  } 
}

.slide-in {
  @include animation(slide-in, 2s, forwards);
}
@include keyframes(slide-in){
  100% { transform: translateX(0%); }
}